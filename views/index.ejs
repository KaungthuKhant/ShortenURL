<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>URL Shortener</title>
    <link rel="stylesheet" href="/styles.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
</head>
<body>
    <a href="/">
        <img src="/images/SnipItBG2.png" alt="SnipIt Logo" class="logo">
    </a>

    <div class="profile-container">
        <button class="profile-button" id="profileButton">
            <i class="fas fa-user-circle"></i>
        </button>
        <div class="profile-dropdown hidden" id="profileDropdown">
            <button class="dropdown-item" onclick="window.location.href='/update-username'">
                <i class="fas fa-user-edit"></i> Update Username
            </button>
            <button class="dropdown-item" onclick="window.location.href='/reset-password'">
                <i class="fas fa-key"></i> Reset Password
            </button>
            <button class="dropdown-item" onclick="window.location.href='/update-email'">
                <i class="fas fa-envelope"></i> Update Email
            </button>
            <hr class="dropdown-divider">
            <form action="/logout?_method=DELETE" method="POST" class="dropdown-form">
                <button type="submit" class="dropdown-item logout-item">
                    <i class="fas fa-sign-out-alt"></i> Logout
                </button>
            </form>
        </div>
    </div>

    <h2>Welcome, <%= name %></h2>
    
    <div id="errorMessage" class="error-message" style="color: #e65757; margin-bottom: 10px;"></div>

    <form id="shortenForm">
        <div class="form-row">
            <input required placeholder="Enter URL to shorten" type="text" name="fullUrl" id="fullUrl" class="url-input">
            <input type="text" placeholder="Custom Short URL" name="shortUrl" id="shortUrl">
            <input type="hidden" name="userEmail" id="userEmail" value="<%= email %>">
            <button type="submit">Shorten</button>
        </div>
    </form>
    
    <table>
        <thead>
            <tr>
                <th>Full URL</th>
                <th style="width: 150px;">Short URL</th>
                <th style="width: 60px;">Clicks</th>
                <th style="width: 60px;">Details</th>
                <th style="width: 60px;">Delete</th>
                <th style="width: 60px;">Copy</th>
            </tr>
        </thead>
        <tbody id="urlTableBody">
            <% urls.forEach(shortUrl => { %>
                <tr style="height: 10px;">
                    <td style="vertical-align: middle;"><a href="<%= shortUrl.fullUrl %>"><%= shortUrl.fullUrl %></a></td>
                    <td style="vertical-align: middle;"><a href="<%= shortUrl.shortUrl %>"><%= shortUrl.shortUrl %></a></td>
                    <td style="vertical-align: middle;"><%= shortUrl.clicks %></td>
                    <td style="vertical-align: middle;">
                        <button class="action-button details-button" data-short-url="<%= shortUrl.shortUrl %>">
                            <i class="fas fa-external-link-alt"></i>
                        </button>
                    </td>
                    <td style="vertical-align: middle;">
                        <button class="action-button delete-button" data-short-url="<%= shortUrl.shortUrl %>">
                            <i class="fas fa-trash-alt"></i>
                        </button>
                    </td>
                    <td style="vertical-align: middle;">
                        <button class="action-button copy-button" data-clipboard-text="<%= `${req.protocol}://${req.get('host')}/${shortUrl.shortUrl}` %>">
                            <i class="fas fa-copy"></i>
                        </button>
                    </td> 
                </tr>
            <% }) %>
        </tbody>
    </table>
    
    <form action="/logout?_method=DELETE" method="POST" class="logout-form">
        <button type="submit" class="logout-button">Log Out</button>
    </form> 

    <div id="deleteModal" class="modal hidden">
        <div class="modal-content">
            <h2 id="deleteModalTitle">Confirm Deletion</h2>
            <p id="deleteModalMessage">Are you sure you want to delete this URL?</p>
            <div class="modal-buttons">
                <button id="confirmDelete" class="modal-button confirm">Delete</button>
                <button id="cancelDelete" class="modal-button cancel">Cancel</button>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            
            const formatDate = (date) => {
                return date.toISOString().split('T')[0];
            };

            const errorMessageDiv = document.getElementById('errorMessage');

            applyCopyFunctionality();
            applyDeleteFunctionality();
            applyDetailsFunctionality();

            document.getElementById('shortenForm').addEventListener('submit', function(e) {
                e.preventDefault();
                const fullUrl = document.getElementById('fullUrl').value;
                const shortUrl = document.getElementById('shortUrl').value;
                const userEmail = document.getElementById('userEmail').value;

                const data = {
                    fullUrl,
                    shortUrl,
                    userEmail
                };

                fetch('/shortUrls', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                })
                .then(response => response.json())
                .then(data => {
                    if (data.error) {
                        errorMessageDiv.textContent = data.error;
                        errorMessageDiv.style.display = 'block';
                        const errorInput = document.getElementById(data.errorComponent === 'short_url' ? 'shortUrl' : 'fullUrl');
                        errorInput.style.borderColor = '#e65757';
                        errorInput.style.boxShadow = '0 0 5px rgba(230, 87, 87, 0.5)';
                    } else {
                        updateTable(data.urls);
                        this.reset();
                        errorMessageDiv.style.display = 'none';
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    errorMessageDiv.textContent = 'An error occurred. Please try again.';
                    errorMessageDiv.style.display = 'block';
                });
            });
        });

        function updateTable(urls) {
            const tableBody = document.getElementById('urlTableBody');
            tableBody.innerHTML = '';
            
            urls.forEach(url => {
                const fullShortUrl = `${window.location.protocol}//${window.location.host}/${url.shortUrl}`;
                const row = document.createElement('tr');
                row.style.height = '10px';
                row.innerHTML = `
                    <td style="vertical-align: middle;"><a href="${url.fullUrl}">${url.fullUrl}</a></td>
                    <td style="vertical-align: middle;"><a href="${fullShortUrl}">${url.shortUrl}</a></td>
                    <td style="vertical-align: middle;">${url.clicks}</td>
                    <td style="vertical-align: middle;">
                        <button class="action-button details-button" data-short-url="${url.shortUrl}">
                            <i class="fas fa-external-link-alt"></i>
                        </button>
                    </td>
                    <td style="vertical-align: middle;">
                        <button class="action-button delete-button" data-short-url="${url.shortUrl}">
                            <i class="fas fa-trash-alt"></i>
                        </button>
                    </td>
                    <td style="vertical-align: middle;">
                        <button class="action-button copy-button" data-clipboard-text="${fullShortUrl}">
                            <i class="fas fa-copy"></i>
                        </button>
                    </td>
                `;
                tableBody.appendChild(row);
            });

            applyCopyFunctionality();
            applyDeleteFunctionality();
            applyDetailsFunctionality();
        }

        function applyCopyFunctionality() {
            document.querySelectorAll('.copy-button').forEach(button => {
                button.addEventListener('click', () => {
                    const shortUrl = button.getAttribute('data-clipboard-text');
                    navigator.clipboard.writeText(shortUrl).then(() => {
                        console.log('Short URL copied to clipboard!');
                    }).catch(err => {
                        console.error('Error copying short URL to clipboard:', err);
                    });
                });
            });
        }

        function applyDeleteFunctionality() {
            document.querySelectorAll('.delete-button').forEach(button => {
                button.addEventListener('click', function(e) {
                    e.preventDefault();
                    
                    const modal = document.getElementById('deleteModal');
                    const title = document.getElementById('deleteModalTitle');
                    const message = document.getElementById('deleteModalMessage');
                    const confirmBtn = document.getElementById('confirmDelete');
                    const cancelBtn = document.getElementById('cancelDelete');
                    const shortUrl = this.dataset.shortUrl;
                    
                    // Show modal
                    title.textContent = "Confirm Deletion: " + shortUrl;
                    modal.classList.remove('hidden');
                    
                    // Handle confirm button click
                    const handleConfirm = async () => {
                        try {
                            console.log('Attempting to delete:', shortUrl);
                            
                            const response = await fetch('/delete-url', {
                                method: 'DELETE',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({ shortUrl: shortUrl })
                            });
                            
                            const data = await response.json();
                            
                            if (data.success) {
                                console.log('Delete successful');
                                updateTable(data.urls);
                                localStorage.setItem('urlUpdated', 'true');
                            } else {
                                console.error('Delete failed:', data.error);
                            }
                        } catch (error) {
                            console.error('Error during deletion:', error);
                        } finally {
                            modal.classList.add('hidden');
                        }
                    };
                    
                    // Handle cancel button click
                    const handleCancel = () => {
                        modal.classList.add('hidden');
                    };
                    
                    // Handle clicking outside the modal
                    const handleOutsideClick = (e) => {
                        if (e.target === modal) {
                            handleCancel();
                        }
                    };
                    
                    // Add event listeners
                    confirmBtn.addEventListener('click', handleConfirm);
                    cancelBtn.addEventListener('click', handleCancel);
                    modal.addEventListener('click', handleOutsideClick);
                });
            });
        }

        function applyDetailsFunctionality() {
            document.querySelectorAll('.details-button').forEach(button => {
                button.addEventListener('click', function(e) {
                    e.preventDefault();
                    const shortUrl = this.getAttribute('data-short-url');
                    console.log("Calling details for: ", shortUrl);
                    window.open(`/url-details?shortUrl=${shortUrl}`, '_blank');
                });
            });
        }

        window.addEventListener('pageshow', function(event) {
            if (event.persisted) {
                fetch('/fetch-urls')
                    .then(response => response.json())
                    .then(data => {
                        updateTable(data.urls);
                    })
                    .catch(err => console.error('Error fetching updated data:', err));
            }
        });

        document.addEventListener('visibilitychange', function() {
            if (!document.hidden) {
                fetch('/check-session')
                    .then(response => response.json())
                    .then(data => {
                        if (!data.valid) {
                            window.location.href = '/login?timeout=true';
                        } else {
                            return fetch('/fetch-urls');
                        }
                    })
                    .then(response => {
                        if (response) return response.json();
                    })
                    .then(data => {
                        if (data && data.urls) updateTable(data.urls);
                    })
                    .catch(err => console.error('Error:', err));
            }
        });

        window.addEventListener('storage', function(e) {
            if (e.key === 'urlUpdated' && e.newValue === 'true') {
                updateUrlTable();
                localStorage.removeItem('urlUpdated');
            }
        });

        function updateUrlTable() {
            fetch('/fetch-urls')
                .then(response => response.json())
                .then(data => {
                    updateTable(data.urls);
                })
                .catch(err => console.error('Error fetching updated data:', err));
        }

        // Profile dropdown functionality
        const profileButton = document.getElementById('profileButton');
        const profileDropdown = document.getElementById('profileDropdown');

        profileButton.addEventListener('click', (e) => {
            e.stopPropagation();
            profileDropdown.classList.toggle('hidden');
        });

        // Close dropdown when clicking outside
        document.addEventListener('click', (e) => {
            if (!profileDropdown.contains(e.target) && !profileButton.contains(e.target)) {
                profileDropdown.classList.add('hidden');
            }
        });
    </script>
</body>
</html>
